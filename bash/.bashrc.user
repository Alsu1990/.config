# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# colored GCC warnings and errors
#export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

# some more ls aliases
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'

# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi


if ! shopt -oq posix; then
    if [ -f /usr/share/bash-completion/bash_completion ]; then
        . /usr/share/bash-completion/bash_completion
    elif [ -f /etc/bash_completion ]; then
        . /etc/bash_completion
    fi
fi

# user options
if [ -f ~/.bash.completion ]; then
    . ~/.bash.completion
fi

eval "$(fzf --bash)" # Set up fzf key bindings and fuzzy completion

# user functions
_copy(){
    cat | xclip -selection clipboard
}

_paste(){
    xclip -selection clipboard -o
}

usb_wsl_bind() {
    # powershell.exe -ExecutionPolicy Bypass -Command "usbipd.exe bind -i $1; exit $LASTEXITCODE"
    powershell.exe -ExecutionPolicy Bypass -Command "Start-Process usbipd.exe -ArgumentList 'bind -i $1' -Verb RunAs; exit $LASTEXITCODE"
}
usb_wsl_attach() {
    usb_wsl_bind $1
    powershell.exe -ExecutionPolicy Bypass -Command "usbipd.exe attach -w -i $1; exit $LASTEXITCODE"
}
usb_wsl_detach() {
    powershell.exe -ExecutionPolicy Bypass -Command "usbipd.exe detach -i $1; exit $LASTEXITCODE"
}

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
